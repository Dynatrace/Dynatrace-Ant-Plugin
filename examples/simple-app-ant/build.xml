<?xml version="1.0" encoding="UTF-8"?>
<project name="Example app with Dynatrace integration">
	<description>Shows how to use the dynaTrace Automation Ant Tasks</description>

	<property name="dtBaseDir" value="../../build/dist/" />

	<!-- Import the dynaTrace Automation Tasks -->
	<import file="../../build/dist/dtTaskDefs.xml"/>
	<property name="main.build.dir" value="build/main"/>
	<property name="main.src.dir" value="src/main/java"/>
	<property name="test.build.dir" value="build/test"/>
	<property name="test.src.dir" value="src/test/java"/>

	<property name="dtBaseDir" value="../../build/dist/" />
	<!-- Properties used for project purposes -->
	<!--
		*** Change properties below according to your Dynatrace configuration ***

		agentPath - used by test phase to inject Java agent into JVM (not used directly by plugin)
		dynaTrace.agent - agent alias passed to Java agent (not used directly by plugin)
		dynaTrace.profile - defines system profile name used by startTest, enableProfile, activateConfiguration, ... (not used directly by plugin)

		Path to agent.
		Windows "C:\Program Files\dynaTrace\dynaTrace 6.5\agent\lib64\dtagent.dll"
		Unix "/opt/dynatrace-6.5/agent/lib64/libdtagent.so"
	-->
	<property name="agentPath" value="C:/workspaces/dynatrace/jloadtrace/agent/lib64/dtagent.dll" />
	<property name="dynaTrace.agent" value="Test" />
	<property name="dynaTrace.profile" value="easyTravel" />

	<path id="classpath.test">
		<pathelement location="lib/junit-4.12.jar"/>
		<pathelement location="lib/hamcrest-core-1.3.jar"/>
		<pathelement location="${main.build.dir}"/>
	</path>

	<target name="compile">
		<mkdir dir="${main.build.dir}"/>
		<javac srcdir="${main.src.dir}" destdir="${main.build.dir}" includeantruntime="false"/>
	</target>

	<target name="test-compile" depends="compile">
		<mkdir dir="${test.build.dir}"/>
		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
			<classpath refid="classpath.test"/>
		</javac>
	</target>

	<target name="run-test" depends="test-compile">
		<junit printsummary="on" haltonfailure="yes" fork="true">
			<jvmarg value="-agentpath:${agentPath}=name=${dynaTrace.agent}_${dynaTrace.profile},server=localhost,wait=5,optionTestRunIdJava=${dtTestrunID}" />
			<classpath>
				<path refid="classpath.test"/>
				<pathelement location="${test.build.dir}"/>
			</classpath>
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${test.src.dir}" includes="**/*Test.java" />
			</batchtest>
		</junit>
	</target>

	<target name="startTestWithAntPlugin" depends="test-compile">
		<DtStartTest
				versionMajor="1"
				versionMinor="2"
				versionRevision="3"
				versionMilestone="4"
				versionBuild="102"
				category="unit">

			<customproperty  key="testKey" value="value" />

			<!-- tests with given metrics will be included within test run, all tests will be included if no metric filter is specified -->
			<metricfilter group="Error Detection" metric="Failed Transaction Count"/>

		</DtStartTest>
		<junit printsummary="on" haltonfailure="yes" fork="true">
			<jvmarg value="-agentpath:${agentPath}=name=${dynaTrace.agent}_${dynaTrace.profile},server=localhost,wait=5,optionTestRunIdJava=${dtTestrunID}" />
			<classpath>
				<path refid="classpath.test"/>
				<pathelement location="${test.build.dir}"/>
			</classpath>
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${test.src.dir}" includes="**/*Test.java" />
			</batchtest>
		</junit>
	</target>

	<!-- targets with Dynatrace Automation tasks -->
	<!-- whenever given task doesn't have profile name, username, password, serverUrl... specified, it uses defaults from tasks definition xml -->
	<target name="ActivateConfiguration">
		<DtActivateConfiguration profileName="${dynaTrace.profile}" configuration="Default" />
	</target>

	<target name="EnableProfile">
		<DtEnableProfile profileName="${dynaTrace.profile}" enable="true" />
	</target>

	<target name="DisableProfile">
		<DtEnableProfile profileName="${dynaTrace.profile}" enable="false" />
	</target>

	<target name="StorePurePaths">
		<DtStorePurePaths recordingOption="all" sessionLocked="false" appendTimestamp="false" />
	</target>

	<!-- Start Recording a new dynaTrace Session
		The actual session name will be stored in the Ant Property "SessionName" which can later be used as input for other tasks
	-->
	<target name="StartRecording">
		<DtStartRecording profileName="easyTravel" sessionUriProperty="SessionUri" sessionName="AntSession" sessionDescription="This Session is triggered by an Ant Task"  />
		<echo message="Start Recording SessionUri: ${SessionUri}" />
	</target>

	<!-- Stops current recording
		The actual session name will be stored in the Ant Property "SessionName" which can later be used as input for other tasks
	-->
	<target name="StopRecording">
		<!-- The stopDelay (in ms) is in there so that you can manually create some purepaths in the meantime that end up in the session -->
		<DtStopRecording profileName="easyTravel" sessionUriProperty="SessionUri" stopDelay="10000" />
		<echo message="Stopped Recording SessionUri: ${SessionUri}" />
	</target>

	<!-- Combines the calls to Start and Stop recording -->
	<target name="StartStopRecording" depends="StartRecording,StopRecording" >
	</target>

</project>